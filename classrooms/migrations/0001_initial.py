# Generated by Django 4.1.7 on 2023-04-16 09:12

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('regular', 'Regular'), ('question', 'Question')], default='regular', max_length=8)),
                ('title', models.CharField(max_length=300)),
                ('_date_created', models.DateTimeField(auto_now_add=True)),
                ('date_last_mod', models.DateTimeField(auto_now=True)),
                ('date_due', models.DateTimeField()),
                ('content', ckeditor.fields.RichTextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('review_complete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, max_length=150, null=True)),
                ('background_img', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.department')),
                ('lecturers', models.ManyToManyField(to='users.lecturer')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='users.lecturer')),
            ],
            options={
                'unique_together': {('department', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('_date_created', models.DateTimeField(auto_now_add=True)),
                ('_date_modified', models.DateTimeField(auto_now=True)),
                ('start', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('accept_after_expired', models.BooleanField(default=True)),
                ('accepting_answers', models.BooleanField(default=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.classroom')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.lecturer')),
            ],
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('question', models.TextField(default='')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='QuizQuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F')], max_length=1)),
                ('answer', models.CharField(default='', max_length=300)),
                ('correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.quizquestion')),
            ],
        ),
        migrations.CreateModel(
            name='QuizStudentResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.student')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='QuizStudentResponseQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.quizquestion')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.quizstudentresponse')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('grade', models.CharField(blank=True, max_length=20, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='submitted_assignments')),
                ('lec_comment', models.TextField(blank=True, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.assignment')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.student')),
            ],
        ),
        migrations.CreateModel(
            name='QuizStudentResponseQuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.quizquestionanswer')),
                ('response_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.quizstudentresponsequestion')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='classroom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.classroom'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.lecturer'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('_date_created', models.DateTimeField(auto_now_add=True)),
                ('date_last_mod', models.DateTimeField(auto_now=True)),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.classroom')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.lecturer')),
            ],
            options={
                'unique_together': {('classroom', 'title')},
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=300)),
                ('_date_created', models.DateTimeField(auto_now_add=True)),
                ('start', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('meeting_url', models.URLField(blank=True, null=True)),
                ('meeting_id', models.CharField(blank=True, max_length=300, null=True)),
                ('meeting_pwd', models.CharField(blank=True, max_length=200, null=True)),
                ('recording_url', models.URLField(blank=True, null=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classrooms.classroom')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.lecturer')),
            ],
            options={
                'unique_together': {('classroom', 'topic')},
            },
        ),
    ]
